<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>Postal_Code_First_Characaters</name>
        <label>Postal Code First Characaters</label>
        <locationX>567</locationX>
        <locationY>15</locationY>
        <assignmentItems>
            <assignToReference>strPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>frPostalCode2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>strPostalCodeSingle</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>frPostalcode1</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>PostCode_Assignment</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Checked_Or_Unchecked</name>
        <label>Checked Or Unchecked</label>
        <locationX>51</locationX>
        <locationY>66</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Checked_and_Cops_Approved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CheckedFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strFieldName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>COPS Approved</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_Account</targetReference>
            </connector>
            <label>Checked and Cops Approved</label>
        </rules>
        <rules>
            <name>Checked_and_Document_Uploaded</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CheckedFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strFieldName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Documents Uploaded</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LookUp_Queue_0</targetReference>
            </connector>
            <label>Checked and Document Uploaded</label>
        </rules>
        <rules>
            <name>Unchecked</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CheckedFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LookUp_Case_ID</targetReference>
            </connector>
            <label>Unchecked</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Owner_Changed</name>
        <label>Has Owner Changed to Queue</label>
        <locationX>56</locationX>
        <locationY>297</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>To_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>strNewValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Owner</targetReference>
            </connector>
            <label>Values Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Queue_ID</name>
        <label>Has Queue ID</label>
        <locationX>923</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>To_set_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>strQueueID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Owner_for_checked</targetReference>
            </connector>
            <label>To  set Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Queue_ID_0</name>
        <label>Has Queue ID</label>
        <locationX>358</locationX>
        <locationY>338</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>To_set_Queue_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>strQueueID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Owner_for_checked_0</targetReference>
            </connector>
            <label>To  set Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_PostCode_Null</name>
        <label>Is PostCode Null</label>
        <locationX>490</locationX>
        <locationY>126</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LookUp_Queue</targetReference>
            </connector>
            <label>Null</label>
        </rules>
        <rules>
            <name>Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Postal_Code_First_Characaters</targetReference>
            </connector>
            <label>Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>PostCode_Assignment</name>
        <label>PostCode Assignment</label>
        <locationX>748</locationX>
        <locationY>17</locationY>
        <defaultConnector>
            <targetReference>PostCode_Assignment_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>Alex_McKinney</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DT</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EX</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OX</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SO</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TQ</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex_0</targetReference>
            </connector>
            <label>Alex McKinney</label>
        </rules>
        <rules>
            <name>Alexa_Hurst</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BT</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FK</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HX</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IV</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ML</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SK</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>YO</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ZE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex</targetReference>
            </connector>
            <label>Alexa Hurst</label>
        </rules>
        <rules>
            <name>Amy_Lambourne</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CV</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MK</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ST</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WV</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HU</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex_0_0</targetReference>
            </connector>
            <label>Amy Lambourne</label>
        </rules>
        <rules>
            <name>Shauna_Black</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CO</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CT</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ME</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>NW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RH</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SL</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>UB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WC</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KT</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex_0_0_0</targetReference>
            </connector>
            <label>Shauna Black</label>
        </rules>
    </decisions>
    <decisions>
        <name>PostCode_Assignment_0</name>
        <label>PostCode Assignment</label>
        <locationX>754</locationX>
        <locationY>222</locationY>
        <defaultConnector>
            <targetReference>LookUp_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>Alexa_Hurst_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>L</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex</targetReference>
            </connector>
            <label>Alexa Hurst</label>
        </rules>
        <rules>
            <name>Amy_Lambourne_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>B</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>S</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex_0_0</targetReference>
            </connector>
            <label>Amy Lambourne</label>
        </rules>
        <rules>
            <name>Shauna_Black_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>E</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>strPostalCodeSingle</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>W</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lookup_User_Alex_0_0_0</targetReference>
            </connector>
            <label>Shauna Black</label>
        </rules>
    </decisions>
    <formulas>
        <name>frPostalcode1</name>
        <dataType>String</dataType>
        <expression>LEFT({!strPostalCode},1)</expression>
    </formulas>
    <formulas>
        <name>frPostalCode2</name>
        <dataType>String</dataType>
        <expression>LEFT({!strPostalCode},2)</expression>
    </formulas>
    <interviewLabel>Case Owner Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Owner Update</label>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Lookup_Account</name>
        <label>Lookup Account</label>
        <locationX>375</locationX>
        <locationY>13</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_PostCode_Null</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strAccountID</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputAssignments>
            <assignToReference>strPostalCode</assignToReference>
            <field>ShippingPostalCode</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>LookUp_Case_ID</name>
        <label>LookUp Case History</label>
        <locationX>55</locationX>
        <locationY>190</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Owner_Changed</targetReference>
        </connector>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strCaseID</elementReference>
            </value>
        </filters>
        <filters>
            <field>Field</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Owner</stringValue>
            </value>
        </filters>
        <object>CaseHistory</object>
        <outputAssignments>
            <assignToReference>strNewValue</assignToReference>
            <field>NewValue</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>strOldValue</assignToReference>
            <field>OldValue</field>
        </outputAssignments>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>LookUp_Queue</name>
        <label>LookUp Queue</label>
        <locationX>749</locationX>
        <locationY>394</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Queue_ID</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>HC_Scheduling_Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>strQueueID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>LookUp_Queue_0</name>
        <label>LookUp Queue</label>
        <locationX>351</locationX>
        <locationY>228</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Has_Queue_ID_0</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>HC_Docs_Check_Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>strQueueID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Lookup_User_Alex</name>
        <label>Lookup up Alexa Hurst</label>
        <locationX>1089</locationX>
        <locationY>86</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_for_checked_1</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Alexa Hurst</stringValue>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>strUserID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Lookup_User_Alex_0</name>
        <label>Lookup User Alex</label>
        <locationX>1086</locationX>
        <locationY>9</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_for_checked_1</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Alex McKinney</stringValue>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>strUserID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Lookup_User_Alex_0_0</name>
        <label>Lookup User Amy Lambourne</label>
        <locationX>1096</locationX>
        <locationY>257</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_for_checked_1</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Amy Lambourne</stringValue>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>strUserID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Lookup_User_Alex_0_0_0</name>
        <label>Lookup User Shauna Black</label>
        <locationX>1090</locationX>
        <locationY>163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_for_checked_1</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Shauna Black</stringValue>
            </value>
        </filters>
        <object>User</object>
        <outputAssignments>
            <assignToReference>strUserID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Owner</name>
        <label>Update Case Owner</label>
        <locationX>60</locationX>
        <locationY>416</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strCaseID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>strOldValue</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Owner_for_checked</name>
        <label>Update Case Owner for checked</label>
        <locationX>950</locationX>
        <locationY>502</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strCaseID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>strQueueID</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Owner_for_checked_0</name>
        <label>Update Case Owner for checked</label>
        <locationX>347</locationX>
        <locationY>445</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strCaseID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>strQueueID</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Owner_for_checked_1</name>
        <label>Update Case Owner for checked</label>
        <locationX>1354</locationX>
        <locationY>42</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>strCaseID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>strUserID</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <startElementReference>Checked_Or_Unchecked</startElementReference>
    <variables>
        <name>CheckedFlag</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strAccountID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strCaseID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strFieldName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strNewValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strOldValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strPostalCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strPostalCodeSingle</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strQueueID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>strUserID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
